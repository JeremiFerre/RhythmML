/*
 * generated by Xtext 2.14.0
 */
grammar InternalGuardin;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.polytech.dsl.rhythm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.polytech.dsl.rhythm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.polytech.dsl.rhythm.services.GuardinGrammarAccess;

}

@parser::members {

 	private GuardinGrammarAccess grammarAccess;

    public InternalGuardinParser(TokenStream input, GuardinGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Music";
   	}

   	@Override
   	protected GuardinGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMusic
entryRuleMusic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMusicRule()); }
	iv_ruleMusic=ruleMusic
	{ $current=$iv_ruleMusic.current; }
	EOF;

// Rule Music
ruleMusic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMusicAccess().getMusicAction_0(),
					$current);
			}
		)
		(
			otherlv_1='CustomSoundBank'
			{
				newLeafNode(otherlv_1, grammarAccess.getMusicAccess().getCustomSoundBankKeyword_1_0());
			}
			otherlv_2='basePath='
			{
				newLeafNode(otherlv_2, grammarAccess.getMusicAccess().getBasePathKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMusicAccess().getSoundBankPathEStringParserRuleCall_1_2_0());
					}
					lv_soundBankPath_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMusicRule());
						}
						set(
							$current,
							"soundBankPath",
							lv_soundBankPath_3_0,
							"fr.polytech.dsl.rhythm.Guardin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='Music'
		{
			newLeafNode(otherlv_4, grammarAccess.getMusicAccess().getMusicKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMusicAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMusicRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"fr.polytech.dsl.rhythm.Guardin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getMusicAccess().getColonKeyword_4());
		}
		otherlv_7='sections'
		{
			newLeafNode(otherlv_7, grammarAccess.getMusicAccess().getSectionsKeyword_5());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getMusicAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMusicAccess().getSectionsSectionParserRuleCall_7_0());
				}
				lv_sections_9_0=ruleSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMusicRule());
					}
					add(
						$current,
						"sections",
						lv_sections_9_0,
						"fr.polytech.dsl.rhythm.Guardin.Section");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMusicAccess().getSectionsSectionParserRuleCall_8_0());
				}
				lv_sections_10_0=ruleSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMusicRule());
					}
					add(
						$current,
						"sections",
						lv_sections_10_0,
						"fr.polytech.dsl.rhythm.Guardin.Section");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_11='tracks'
		{
			newLeafNode(otherlv_11, grammarAccess.getMusicAccess().getTracksKeyword_9());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getMusicAccess().getColonKeyword_10());
		}
		(
			otherlv_13='-'
			{
				newLeafNode(otherlv_13, grammarAccess.getMusicAccess().getHyphenMinusKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMusicAccess().getTracksTrackParserRuleCall_11_1_0());
					}
					lv_tracks_14_0=ruleTrack
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMusicRule());
						}
						add(
							$current,
							"tracks",
							lv_tracks_14_0,
							"fr.polytech.dsl.rhythm.Guardin.Track");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15='-'
				{
					newLeafNode(otherlv_15, grammarAccess.getMusicAccess().getHyphenMinusKeyword_11_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMusicAccess().getTracksTrackParserRuleCall_11_2_1_0());
						}
						lv_tracks_16_0=ruleTrack
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMusicRule());
							}
							add(
								$current,
								"tracks",
								lv_tracks_16_0,
								"fr.polytech.dsl.rhythm.Guardin.Track");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	iv_ruleSection=ruleSection
	{ $current=$iv_ruleSection.current; }
	EOF;

// Rule Section
ruleSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSectionAccess().getSectionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.polytech.dsl.rhythm.Guardin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSectionAccess().getColonKeyword_2());
		}
		otherlv_3='tempo='
		{
			newLeafNode(otherlv_3, grammarAccess.getSectionAccess().getTempoKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getTempoEIntParserRuleCall_4_0());
				}
				lv_tempo_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					set(
						$current,
						"tempo",
						lv_tempo_4_0,
						"fr.polytech.dsl.rhythm.Guardin.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='signature='
		{
			newLeafNode(otherlv_5, grammarAccess.getSectionAccess().getSignatureKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getSignatureEIntParserRuleCall_6_0());
				}
				lv_signature_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					set(
						$current,
						"signature",
						lv_signature_6_0,
						"fr.polytech.dsl.rhythm.Guardin.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='bars='
		{
			newLeafNode(otherlv_7, grammarAccess.getSectionAccess().getBarsKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getBarsEIntParserRuleCall_8_0());
				}
				lv_bars_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					set(
						$current,
						"bars",
						lv_bars_8_0,
						"fr.polytech.dsl.rhythm.Guardin.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrack
entryRuleTrack returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrackRule()); }
	iv_ruleTrack=ruleTrack
	{ $current=$iv_ruleTrack.current; }
	EOF;

// Rule Track
ruleTrack returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrackAccess().getTrackAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTrackAccess().getNameEStringParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrackRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"fr.polytech.dsl.rhythm.Guardin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getTrackAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTrackAccess().getInstrumentInstrumentParserRuleCall_2_0());
				}
				lv_instrument_3_0=ruleInstrument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrackRule());
					}
					set(
						$current,
						"instrument",
						lv_instrument_3_0,
						"fr.polytech.dsl.rhythm.Guardin.Instrument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInstrument
entryRuleInstrument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstrumentRule()); }
	iv_ruleInstrument=ruleInstrument
	{ $current=$iv_ruleInstrument.current; }
	EOF;

// Rule Instrument
ruleInstrument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstrumentAccess().getBatteryParserRuleCall_0());
		}
		this_Battery_0=ruleBattery
		{
			$current = $this_Battery_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstrumentAccess().getMelodyParserRuleCall_1());
		}
		this_Melody_1=ruleMelody
		{
			$current = $this_Melody_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEmptyNote
entryRuleEmptyNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyNoteRule()); }
	iv_ruleEmptyNote=ruleEmptyNote
	{ $current=$iv_ruleEmptyNote.current; }
	EOF;

// Rule EmptyNote
ruleEmptyNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEmptyNoteAccess().getEmptyNoteAction_0(),
					$current);
			}
		)
		otherlv_1='$'
		{
			newLeafNode(otherlv_1, grammarAccess.getEmptyNoteAccess().getDollarSignKeyword_1());
		}
	)
;

// Entry rule entryRuleBattery
entryRuleBattery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBatteryRule()); }
	iv_ruleBattery=ruleBattery
	{ $current=$iv_ruleBattery.current; }
	EOF;

// Rule Battery
ruleBattery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBatteryAccess().getBatteryAction_0(),
					$current);
			}
		)
		otherlv_1='battery'
		{
			newLeafNode(otherlv_1, grammarAccess.getBatteryAccess().getBatteryKeyword_1());
		}
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getBatteryAccess().getColonKeyword_2_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBatteryAccess().getNameEStringParserRuleCall_2_1_0_0());
						}
						lv_name_3_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBatteryRule());
							}
							set(
								$current,
								"name",
								lv_name_3_0,
								"fr.polytech.dsl.rhythm.Guardin.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getBatteryAccess().getColonKeyword_2_1_1());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBatteryAccess().getSectionsSectionBatteryLayerParserRuleCall_3_0_0());
					}
					lv_sections_5_0=ruleSectionBatteryLayer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBatteryRule());
						}
						add(
							$current,
							"sections",
							lv_sections_5_0,
							"fr.polytech.dsl.rhythm.Guardin.SectionBatteryLayer");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getBatteryAccess().getLayersBatteryLayerParserRuleCall_3_1_0());
					}
					lv_layers_6_0=ruleBatteryLayer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBatteryRule());
						}
						add(
							$current,
							"layers",
							lv_layers_6_0,
							"fr.polytech.dsl.rhythm.Guardin.BatteryLayer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleSectionBatteryLayer
entryRuleSectionBatteryLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionBatteryLayerRule()); }
	iv_ruleSectionBatteryLayer=ruleSectionBatteryLayer
	{ $current=$iv_ruleSectionBatteryLayer.current; }
	EOF;

// Rule SectionBatteryLayer
ruleSectionBatteryLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSectionBatteryLayerAccess().getSectionLayerAction_0(),
					$current);
			}
		)
		otherlv_1='begin_section'
		{
			newLeafNode(otherlv_1, grammarAccess.getSectionBatteryLayerAccess().getBegin_sectionKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionBatteryLayerRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSectionBatteryLayerAccess().getSectionSectionCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionBatteryLayerAccess().getLayersBatteryLayerParserRuleCall_3_0());
				}
				lv_layers_3_0=ruleBatteryLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionBatteryLayerRule());
					}
					add(
						$current,
						"layers",
						lv_layers_3_0,
						"fr.polytech.dsl.rhythm.Guardin.BatteryLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='end_section'
		{
			newLeafNode(otherlv_4, grammarAccess.getSectionBatteryLayerAccess().getEnd_sectionKeyword_4());
		}
	)
;

// Entry rule entryRuleBatteryLayer
entryRuleBatteryLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBatteryLayerRule()); }
	iv_ruleBatteryLayer=ruleBatteryLayer
	{ $current=$iv_ruleBatteryLayer.current; }
	EOF;

// Rule BatteryLayer
ruleBatteryLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBatteryLayerAccess().getLayerAction_0(),
					$current);
			}
		)
		otherlv_1='layer:'
		{
			newLeafNode(otherlv_1, grammarAccess.getBatteryLayerAccess().getLayerKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBatteryLayerAccess().getNotesBatteryNoteParserRuleCall_2_0_0());
					}
					lv_notes_2_1=ruleBatteryNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBatteryLayerRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_1,
							"fr.polytech.dsl.rhythm.Guardin.BatteryNote");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBatteryLayerAccess().getNotesEmptyNoteParserRuleCall_2_0_1());
					}
					lv_notes_2_2=ruleEmptyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBatteryLayerRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_2,
							"fr.polytech.dsl.rhythm.Guardin.EmptyNote");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBatteryLayerAccess().getNotesCompositeBatteryNoteParserRuleCall_2_0_2());
					}
					lv_notes_2_3=ruleCompositeBatteryNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBatteryLayerRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_3,
							"fr.polytech.dsl.rhythm.Guardin.CompositeBatteryNote");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleBatteryNote
entryRuleBatteryNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBatteryNoteRule()); }
	iv_ruleBatteryNote=ruleBatteryNote
	{ $current=$iv_ruleBatteryNote.current; }
	EOF;

// Rule BatteryNote
ruleBatteryNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBatteryNoteAccess().getBatteryNoteAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBatteryNoteAccess().getNoteTypeBatteryNoteTypeEnumRuleCall_1_0());
				}
				lv_noteType_1_0=ruleBatteryNoteType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBatteryNoteRule());
					}
					set(
						$current,
						"noteType",
						lv_noteType_1_0,
						"fr.polytech.dsl.rhythm.Guardin.BatteryNoteType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBatteryNoteAccess().getDurationDurationEnumRuleCall_2_0());
				}
				lv_duration_2_0=ruleDuration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBatteryNoteRule());
					}
					set(
						$current,
						"duration",
						lv_duration_2_0,
						"fr.polytech.dsl.rhythm.Guardin.Duration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleCompositeBatteryNote
entryRuleCompositeBatteryNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeBatteryNoteRule()); }
	iv_ruleCompositeBatteryNote=ruleCompositeBatteryNote
	{ $current=$iv_ruleCompositeBatteryNote.current; }
	EOF;

// Rule CompositeBatteryNote
ruleCompositeBatteryNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeBatteryNoteAccess().getCompositeNoteAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositeBatteryNoteAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeBatteryNoteAccess().getNotesBatteryNoteParserRuleCall_2_0_0());
					}
					lv_notes_2_1=ruleBatteryNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeBatteryNoteRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_1,
							"fr.polytech.dsl.rhythm.Guardin.BatteryNote");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCompositeBatteryNoteAccess().getNotesEmptyNoteParserRuleCall_2_0_1());
					}
					lv_notes_2_2=ruleEmptyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeBatteryNoteRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_2,
							"fr.polytech.dsl.rhythm.Guardin.EmptyNote");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompositeBatteryNoteAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='x'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompositeBatteryNoteAccess().getXKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeBatteryNoteAccess().getRepeatsEIntParserRuleCall_5_0());
				}
				lv_repeats_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeBatteryNoteRule());
					}
					set(
						$current,
						"repeats",
						lv_repeats_5_0,
						"fr.polytech.dsl.rhythm.Guardin.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMelody
entryRuleMelody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMelodyRule()); }
	iv_ruleMelody=ruleMelody
	{ $current=$iv_ruleMelody.current; }
	EOF;

// Rule Melody
ruleMelody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMelodyAccess().getMelodyAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Melody'
			{
				newLeafNode(otherlv_1, grammarAccess.getMelodyAccess().getMelodyKeyword_1_0());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMelodyAccess().getInstrumentInstrumentsEnumRuleCall_1_1_0());
					}
					lv_instrument_2_0=ruleInstruments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMelodyRule());
						}
						set(
							$current,
							"instrument",
							lv_instrument_2_0,
							"fr.polytech.dsl.rhythm.Guardin.Instruments");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='other:'
				{
					newLeafNode(otherlv_3, grammarAccess.getMelodyAccess().getOtherKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMelodyAccess().getOtherEStringParserRuleCall_1_2_1_0());
						}
						lv_other_4_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMelodyRule());
							}
							set(
								$current,
								"other",
								lv_other_4_0,
								"fr.polytech.dsl.rhythm.Guardin.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getMelodyAccess().getColonKeyword_2_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMelodyAccess().getNameEStringParserRuleCall_2_1_0_0());
						}
						lv_name_6_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMelodyRule());
							}
							set(
								$current,
								"name",
								lv_name_6_0,
								"fr.polytech.dsl.rhythm.Guardin.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=':'
				{
					newLeafNode(otherlv_7, grammarAccess.getMelodyAccess().getColonKeyword_2_1_1());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMelodyAccess().getSectionsSectionMelodyLayerParserRuleCall_3_0_0());
					}
					lv_sections_8_0=ruleSectionMelodyLayer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMelodyRule());
						}
						add(
							$current,
							"sections",
							lv_sections_8_0,
							"fr.polytech.dsl.rhythm.Guardin.SectionMelodyLayer");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMelodyAccess().getLayersMelodyLayerParserRuleCall_3_1_0());
					}
					lv_layers_9_0=ruleMelodyLayer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMelodyRule());
						}
						add(
							$current,
							"layers",
							lv_layers_9_0,
							"fr.polytech.dsl.rhythm.Guardin.MelodyLayer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleSectionMelodyLayer
entryRuleSectionMelodyLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionMelodyLayerRule()); }
	iv_ruleSectionMelodyLayer=ruleSectionMelodyLayer
	{ $current=$iv_ruleSectionMelodyLayer.current; }
	EOF;

// Rule SectionMelodyLayer
ruleSectionMelodyLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSectionMelodyLayerAccess().getSectionLayerAction_0(),
					$current);
			}
		)
		otherlv_1='begin_section'
		{
			newLeafNode(otherlv_1, grammarAccess.getSectionMelodyLayerAccess().getBegin_sectionKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionMelodyLayerRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSectionMelodyLayerAccess().getSectionSectionCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionMelodyLayerAccess().getLayersMelodyLayerParserRuleCall_3_0());
				}
				lv_layers_3_0=ruleMelodyLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionMelodyLayerRule());
					}
					add(
						$current,
						"layers",
						lv_layers_3_0,
						"fr.polytech.dsl.rhythm.Guardin.MelodyLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='end_section'
		{
			newLeafNode(otherlv_4, grammarAccess.getSectionMelodyLayerAccess().getEnd_sectionKeyword_4());
		}
	)
;

// Entry rule entryRuleMelodyLayer
entryRuleMelodyLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMelodyLayerRule()); }
	iv_ruleMelodyLayer=ruleMelodyLayer
	{ $current=$iv_ruleMelodyLayer.current; }
	EOF;

// Rule MelodyLayer
ruleMelodyLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMelodyLayerAccess().getLayerAction_0(),
					$current);
			}
		)
		otherlv_1='layer:'
		{
			newLeafNode(otherlv_1, grammarAccess.getMelodyLayerAccess().getLayerKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMelodyLayerAccess().getNotesMelodyNoteParserRuleCall_2_0_0());
					}
					lv_notes_2_1=ruleMelodyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMelodyLayerRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_1,
							"fr.polytech.dsl.rhythm.Guardin.MelodyNote");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMelodyLayerAccess().getNotesEmptyNoteParserRuleCall_2_0_1());
					}
					lv_notes_2_2=ruleEmptyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMelodyLayerRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_2,
							"fr.polytech.dsl.rhythm.Guardin.EmptyNote");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMelodyLayerAccess().getNotesCompositeMelodyNoteParserRuleCall_2_0_2());
					}
					lv_notes_2_3=ruleCompositeMelodyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMelodyLayerRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_3,
							"fr.polytech.dsl.rhythm.Guardin.CompositeMelodyNote");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleMelodyNote
entryRuleMelodyNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMelodyNoteRule()); }
	iv_ruleMelodyNote=ruleMelodyNote
	{ $current=$iv_ruleMelodyNote.current; }
	EOF;

// Rule MelodyNote
ruleMelodyNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMelodyNoteAccess().getMelodyNoteAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMelodyNoteAccess().getNoteTypeMelodyNoteTypeEnumRuleCall_1_0());
				}
				lv_noteType_1_0=ruleMelodyNoteType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMelodyNoteRule());
					}
					set(
						$current,
						"noteType",
						lv_noteType_1_0,
						"fr.polytech.dsl.rhythm.Guardin.MelodyNoteType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMelodyNoteAccess().getDurationDurationEnumRuleCall_2_0());
				}
				lv_duration_2_0=ruleDuration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMelodyNoteRule());
					}
					set(
						$current,
						"duration",
						lv_duration_2_0,
						"fr.polytech.dsl.rhythm.Guardin.Duration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_3='/'
				{
					newLeafNode(otherlv_3, grammarAccess.getMelodyNoteAccess().getSolidusKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMelodyNoteAccess().getOctaveOffsetERelativeIntParserRuleCall_3_0_1_0());
						}
						lv_octaveOffset_4_0=ruleERelativeInt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMelodyNoteRule());
							}
							set(
								$current,
								"octaveOffset",
								lv_octaveOffset_4_0,
								"fr.polytech.dsl.rhythm.Guardin.ERelativeInt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_5='|'
				{
					newLeafNode(otherlv_5, grammarAccess.getMelodyNoteAccess().getVerticalLineKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMelodyNoteAccess().getOctaveAbsoluteEIntParserRuleCall_3_1_1_0());
						}
						lv_octaveAbsolute_6_0=ruleEInt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMelodyNoteRule());
							}
							set(
								$current,
								"octaveAbsolute",
								lv_octaveAbsolute_6_0,
								"fr.polytech.dsl.rhythm.Guardin.EInt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleCompositeMelodyNote
entryRuleCompositeMelodyNote returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeMelodyNoteRule()); }
	iv_ruleCompositeMelodyNote=ruleCompositeMelodyNote
	{ $current=$iv_ruleCompositeMelodyNote.current; }
	EOF;

// Rule CompositeMelodyNote
ruleCompositeMelodyNote returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeMelodyNoteAccess().getCompositeNoteAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositeMelodyNoteAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeMelodyNoteAccess().getNotesMelodyNoteParserRuleCall_2_0_0());
					}
					lv_notes_2_1=ruleMelodyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeMelodyNoteRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_1,
							"fr.polytech.dsl.rhythm.Guardin.MelodyNote");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCompositeMelodyNoteAccess().getNotesEmptyNoteParserRuleCall_2_0_1());
					}
					lv_notes_2_2=ruleEmptyNote
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeMelodyNoteRule());
						}
						add(
							$current,
							"notes",
							lv_notes_2_2,
							"fr.polytech.dsl.rhythm.Guardin.EmptyNote");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompositeMelodyNoteAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='x'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompositeMelodyNoteAccess().getXKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeMelodyNoteAccess().getRepeatsEIntParserRuleCall_5_0());
				}
				lv_repeats_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeMelodyNoteRule());
					}
					set(
						$current,
						"repeats",
						lv_repeats_5_0,
						"fr.polytech.dsl.rhythm.Guardin.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getEIntAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleERelativeInt
entryRuleERelativeInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getERelativeIntRule()); }
	iv_ruleERelativeInt=ruleERelativeInt
	{ $current=$iv_ruleERelativeInt.current.getText(); }
	EOF;

// Rule ERelativeInt
ruleERelativeInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getERelativeIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getERelativeIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule Duration
ruleDuration returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='..'
			{
				$current = grammarAccess.getDurationAccess().getEIGHTHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDurationAccess().getEIGHTHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='...'
			{
				$current = grammarAccess.getDurationAccess().getSIXTEENTHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDurationAccess().getSIXTEENTHEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='....'
			{
				$current = grammarAccess.getDurationAccess().getTHIRTY_SECONDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDurationAccess().getTHIRTY_SECONDEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BatteryNoteType
ruleBatteryNoteType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='bd'
			{
				$current = grammarAccess.getBatteryNoteTypeAccess().getBASS_DRUMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBatteryNoteTypeAccess().getBASS_DRUMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ch'
			{
				$current = grammarAccess.getBatteryNoteTypeAccess().getCLOSED_HIHATEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBatteryNoteTypeAccess().getCLOSED_HIHATEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='cc'
			{
				$current = grammarAccess.getBatteryNoteTypeAccess().getCRASH_CYMBALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBatteryNoteTypeAccess().getCRASH_CYMBALEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='oh'
			{
				$current = grammarAccess.getBatteryNoteTypeAccess().getOPENED_HIHATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBatteryNoteTypeAccess().getOPENED_HIHATEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='rc'
			{
				$current = grammarAccess.getBatteryNoteTypeAccess().getRIDE_CYMBALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBatteryNoteTypeAccess().getRIDE_CYMBALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='sd'
			{
				$current = grammarAccess.getBatteryNoteTypeAccess().getSNARE_DRUMEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBatteryNoteTypeAccess().getSNARE_DRUMEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule Instruments
ruleInstruments returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ACOUSTIC_BASS'
			{
				$current = grammarAccess.getInstrumentsAccess().getACOUSTIC_BASSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInstrumentsAccess().getACOUSTIC_BASSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='CHURCH_ORGAN'
			{
				$current = grammarAccess.getInstrumentsAccess().getCHURCH_ORGANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInstrumentsAccess().getCHURCH_ORGANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CLAVINET'
			{
				$current = grammarAccess.getInstrumentsAccess().getCLAVINETEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getInstrumentsAccess().getCLAVINETEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='GUITAR'
			{
				$current = grammarAccess.getInstrumentsAccess().getGUITAREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getInstrumentsAccess().getGUITAREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='HARPSICHORD'
			{
				$current = grammarAccess.getInstrumentsAccess().getHARPSICHORDEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getInstrumentsAccess().getHARPSICHORDEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='MUSIC_BOX'
			{
				$current = grammarAccess.getInstrumentsAccess().getMUSIC_BOXEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getInstrumentsAccess().getMUSIC_BOXEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='OCARINA'
			{
				$current = grammarAccess.getInstrumentsAccess().getOCARINAEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getInstrumentsAccess().getOCARINAEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='PIANO'
			{
				$current = grammarAccess.getInstrumentsAccess().getPIANOEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getInstrumentsAccess().getPIANOEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='SYNTH_BASS_1'
			{
				$current = grammarAccess.getInstrumentsAccess().getSYNTH_BASS_1EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getInstrumentsAccess().getSYNTH_BASS_1EnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='VIOLIN'
			{
				$current = grammarAccess.getInstrumentsAccess().getVIOLINEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getInstrumentsAccess().getVIOLINEnumLiteralDeclaration_9());
			}
		)
	)
;

// Rule MelodyNoteType
ruleMelodyNoteType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='A'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMelodyNoteTypeAccess().getAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='B'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMelodyNoteTypeAccess().getBEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='C'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getCEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMelodyNoteTypeAccess().getCEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='D'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMelodyNoteTypeAccess().getDEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='E'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMelodyNoteTypeAccess().getEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='F'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getFEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getMelodyNoteTypeAccess().getFEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='G'
			{
				$current = grammarAccess.getMelodyNoteTypeAccess().getGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getMelodyNoteTypeAccess().getGEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
