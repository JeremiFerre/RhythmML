// automatically generated by Xtext
grammar fr.polytech.dsl.rhythm.Guardin with org.eclipse.xtext.common.Terminals

import "http://fr.polytech.dsl/rhythm" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Music returns Music:
	{Music}
	("CustomSoundBank" "basePath=" soundBankPath=EString)?
	"Music" name=EString ":"
	"sections" ":"
	sections+=Section
	(sections+=Section)*
	"tracks" ":"(
		"-" tracks+=Track
	   ("-" tracks+=Track)*
	)
;

Section returns Section:
	{Section}
	name=EString ":"
	"tempo=" tempo=EInt
	"signature=" signature=EInt
	"bars=" bars=EInt
;

Track returns Track:
	{Track}
	(name=EString ":")?
	instrument=Instrument
;

Instrument returns Instrument:
	Battery|Melody
;

EmptyNote returns EmptyNote:
	{EmptyNote}
	"$"
;

enum Duration:
	EIGHTH=".."|SIXTEENTH="..."|THIRTY_SECOND="...."
;

/*------------------ BATTERY ------------------*/
Battery returns Battery:
	{Battery}
	"battery" (":"|(name=EString ":"))
	((sections+=SectionBatteryLayer)|(layers+=BatteryLayer))+
;

SectionBatteryLayer returns SectionLayer:
	{SectionLayer}
	"begin_section"
	section=[Section|EString]
	(layers+=BatteryLayer)+
	"end_section"
;

BatteryLayer returns Layer:
	{Layer}
	"layer:" (notes+=(BatteryNote|EmptyNote|CompositeBatteryNote))+
;

BatteryNote returns BatteryNote:
	{BatteryNote}
	noteType=BatteryNoteType (duration=Duration)?
;

enum BatteryNoteType returns BatteryNoteType:
	BASS_DRUM="bd" | CLOSED_HIHAT="ch" | CRASH_CYMBAL="cc" | OPENED_HIHAT="oh" | RIDE_CYMBAL="rc" | SNARE_DRUM="sd"
;

CompositeBatteryNote returns CompositeNote:
	{CompositeNote}
	"(" (notes+=(BatteryNote|EmptyNote))+ ")" "x" repeats=EInt
;
/* ------------------------------------------- */

/*------------------ OTHER INSTRUMENTS ------------------*/
Melody returns Melody:
	{Melody}
	("Melody"|instrument=Instruments|"other:" other=EString) (":"|(name=EString ":"))
	((sections+=SectionMelodyLayer)|(layers+=MelodyLayer))+
;

SectionMelodyLayer returns SectionLayer:
	{SectionLayer}
	"begin_section"
	section=[Section|EString]
	(layers+=MelodyLayer)+
	"end_section"
;

MelodyLayer returns Layer:
	{Layer}
	"layer:" (notes+=(MelodyNote|EmptyNote|CompositeMelodyNote))+
;

MelodyNote returns MelodyNote:
	{MelodyNote}
	noteType=MelodyNoteType (duration=Duration)? (("/" octaveOffset=ERelativeInt)|("|" octaveAbsolute=EInt))?
;

enum Instruments:
	ACOUSTIC_BASS|CHURCH_ORGAN|CLAVINET|GUITAR|HARPSICHORD|MUSIC_BOX|OCARINA|PIANO|SYNTH_BASS_1|VIOLIN
;

enum MelodyNoteType returns MelodyNoteType:
	A|B|C|D|E|F|G
;

CompositeMelodyNote returns CompositeNote:
	{CompositeNote}
	"(" (notes+=(MelodyNote|EmptyNote))+ ")" "x" repeats=EInt
;
/* ------------------------------------------- */

EInt returns ecore::EInt:
	INT
;

ERelativeInt returns ecore::EInt:
	"-"? INT
;

EString returns ecore::EString:
	STRING | ID;
