/*
 * generated by Xtext 2.14.0
 */
grammar InternalGuardin;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.polytech.dsl.rhythm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.polytech.dsl.rhythm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.polytech.dsl.rhythm.services.GuardinGrammarAccess;

}
@parser::members {
	private GuardinGrammarAccess grammarAccess;

	public void setGrammarAccess(GuardinGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMusic
entryRuleMusic
:
{ before(grammarAccess.getMusicRule()); }
	 ruleMusic
{ after(grammarAccess.getMusicRule()); } 
	 EOF 
;

// Rule Music
ruleMusic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMusicAccess().getGroup()); }
		(rule__Music__Group__0)
		{ after(grammarAccess.getMusicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getGroup()); }
		(rule__Section__Group__0)
		{ after(grammarAccess.getSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrack
entryRuleTrack
:
{ before(grammarAccess.getTrackRule()); }
	 ruleTrack
{ after(grammarAccess.getTrackRule()); } 
	 EOF 
;

// Rule Track
ruleTrack 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrackAccess().getGroup()); }
		(rule__Track__Group__0)
		{ after(grammarAccess.getTrackAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBattery
entryRuleBattery
:
{ before(grammarAccess.getBatteryRule()); }
	 ruleBattery
{ after(grammarAccess.getBatteryRule()); } 
	 EOF 
;

// Rule Battery
ruleBattery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBatteryAccess().getGroup()); }
		(rule__Battery__Group__0)
		{ after(grammarAccess.getBatteryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BatteryNote
ruleBatteryNote
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBatteryNoteAccess().getAlternatives()); }
		(rule__BatteryNote__Alternatives)
		{ after(grammarAccess.getBatteryNoteAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BatteryNote__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBatteryNoteAccess().getEMPTYEnumLiteralDeclaration_0()); }
		('$')
		{ after(grammarAccess.getBatteryNoteAccess().getEMPTYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBatteryNoteAccess().getBASS_DRUMEnumLiteralDeclaration_1()); }
		('bd')
		{ after(grammarAccess.getBatteryNoteAccess().getBASS_DRUMEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBatteryNoteAccess().getCLOSED_HIHATEnumLiteralDeclaration_2()); }
		('ch')
		{ after(grammarAccess.getBatteryNoteAccess().getCLOSED_HIHATEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBatteryNoteAccess().getCRASH_CYMBALEnumLiteralDeclaration_3()); }
		('cc')
		{ after(grammarAccess.getBatteryNoteAccess().getCRASH_CYMBALEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBatteryNoteAccess().getOPENED_HIHATEnumLiteralDeclaration_4()); }
		('oh')
		{ after(grammarAccess.getBatteryNoteAccess().getOPENED_HIHATEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBatteryNoteAccess().getRIDE_CYMBALEnumLiteralDeclaration_5()); }
		('rc')
		{ after(grammarAccess.getBatteryNoteAccess().getRIDE_CYMBALEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getBatteryNoteAccess().getSNARE_DRUMEnumLiteralDeclaration_6()); }
		('sd')
		{ after(grammarAccess.getBatteryNoteAccess().getSNARE_DRUMEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__0__Impl
	rule__Music__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getMusicAction_0()); }
	()
	{ after(grammarAccess.getMusicAccess().getMusicAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__1__Impl
	rule__Music__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getNameAssignment_1()); }
	(rule__Music__NameAssignment_1)
	{ after(grammarAccess.getMusicAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__2__Impl
	rule__Music__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getMusicAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__3__Impl
	rule__Music__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getSectionAssignment_3()); }
	(rule__Music__SectionAssignment_3)
	{ after(grammarAccess.getMusicAccess().getSectionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__4__Impl
	rule__Music__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getSectionAssignment_4()); }
	(rule__Music__SectionAssignment_4)*
	{ after(grammarAccess.getMusicAccess().getSectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__5__Impl
	rule__Music__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getTracksKeyword_5()); }
	'tracks'
	{ after(grammarAccess.getMusicAccess().getTracksKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__6__Impl
	rule__Music__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getMusicAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getGroup_7()); }
	(rule__Music__Group_7__0)
	{ after(grammarAccess.getMusicAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Music__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group_7__0__Impl
	rule__Music__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getHyphenMinusKeyword_7_0()); }
	'-'
	{ after(grammarAccess.getMusicAccess().getHyphenMinusKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group_7__1__Impl
	rule__Music__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getTrackAssignment_7_1()); }
	(rule__Music__TrackAssignment_7_1)
	{ after(grammarAccess.getMusicAccess().getTrackAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getGroup_7_2()); }
	(rule__Music__Group_7_2__0)*
	{ after(grammarAccess.getMusicAccess().getGroup_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Music__Group_7_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group_7_2__0__Impl
	rule__Music__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getHyphenMinusKeyword_7_2_0()); }
	'-'
	{ after(grammarAccess.getMusicAccess().getHyphenMinusKeyword_7_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Music__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__Group_7_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMusicAccess().getTrackAssignment_7_2_1()); }
	(rule__Music__TrackAssignment_7_2_1)
	{ after(grammarAccess.getMusicAccess().getTrackAssignment_7_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__0__Impl
	rule__Section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionAction_0()); }
	()
	{ after(grammarAccess.getSectionAccess().getSectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__1__Impl
	rule__Section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getNameAssignment_1()); }
	(rule__Section__NameAssignment_1)
	{ after(grammarAccess.getSectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__2__Impl
	rule__Section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSectionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__3__Impl
	rule__Section__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getTempoKeyword_3()); }
	'tempo='
	{ after(grammarAccess.getSectionAccess().getTempoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__4__Impl
	rule__Section__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getTempoAssignment_4()); }
	(rule__Section__TempoAssignment_4)
	{ after(grammarAccess.getSectionAccess().getTempoAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__5__Impl
	rule__Section__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSignatureKeyword_5()); }
	'signature='
	{ after(grammarAccess.getSectionAccess().getSignatureKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__6__Impl
	rule__Section__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSignatureAssignment_6()); }
	(rule__Section__SignatureAssignment_6)
	{ after(grammarAccess.getSectionAccess().getSignatureAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__7__Impl
	rule__Section__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getBarsKeyword_7()); }
	'bars='
	{ after(grammarAccess.getSectionAccess().getBarsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getBarsAssignment_8()); }
	(rule__Section__BarsAssignment_8)
	{ after(grammarAccess.getSectionAccess().getBarsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Track__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__0__Impl
	rule__Track__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getTrackAction_0()); }
	()
	{ after(grammarAccess.getTrackAccess().getTrackAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__1__Impl
	rule__Track__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getGroup_1()); }
	(rule__Track__Group_1__0)?
	{ after(grammarAccess.getTrackAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__2__Impl
	rule__Track__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getInstrumentKeyword_2()); }
	'instrument'
	{ after(grammarAccess.getTrackAccess().getInstrumentKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__3__Impl
	rule__Track__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getTrackAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getInstrumentAssignment_4()); }
	(rule__Track__InstrumentAssignment_4)
	{ after(grammarAccess.getTrackAccess().getInstrumentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Track__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group_1__0__Impl
	rule__Track__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getNameAssignment_1_0()); }
	(rule__Track__NameAssignment_1_0)
	{ after(grammarAccess.getTrackAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getTrackAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Battery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Battery__Group__0__Impl
	rule__Battery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBatteryAccess().getBatteryAction_0()); }
	()
	{ after(grammarAccess.getBatteryAccess().getBatteryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Battery__Group__1__Impl
	rule__Battery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBatteryAccess().getGroup_1()); }
	(rule__Battery__Group_1__0)?
	{ after(grammarAccess.getBatteryAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Battery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBatteryAccess().getNotesAssignment_2()); }
		(rule__Battery__NotesAssignment_2)
		{ after(grammarAccess.getBatteryAccess().getNotesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getBatteryAccess().getNotesAssignment_2()); }
		(rule__Battery__NotesAssignment_2)*
		{ after(grammarAccess.getBatteryAccess().getNotesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Battery__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Battery__Group_1__0__Impl
	rule__Battery__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBatteryAccess().getNameAssignment_1_0()); }
	(rule__Battery__NameAssignment_1_0)
	{ after(grammarAccess.getBatteryAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Battery__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBatteryAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getBatteryAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Music__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getMusicAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__SectionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicAccess().getSectionSectionParserRuleCall_3_0()); }
		ruleSection
		{ after(grammarAccess.getMusicAccess().getSectionSectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__SectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicAccess().getSectionSectionParserRuleCall_4_0()); }
		ruleSection
		{ after(grammarAccess.getMusicAccess().getSectionSectionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__TrackAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicAccess().getTrackTrackParserRuleCall_7_1_0()); }
		ruleTrack
		{ after(grammarAccess.getMusicAccess().getTrackTrackParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Music__TrackAssignment_7_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMusicAccess().getTrackTrackParserRuleCall_7_2_1_0()); }
		ruleTrack
		{ after(grammarAccess.getMusicAccess().getTrackTrackParserRuleCall_7_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getSectionAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__TempoAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getTempoEIntParserRuleCall_4_0()); }
		ruleEInt
		{ after(grammarAccess.getSectionAccess().getTempoEIntParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__SignatureAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getSignatureEIntParserRuleCall_6_0()); }
		ruleEInt
		{ after(grammarAccess.getSectionAccess().getSignatureEIntParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__BarsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getBarsEIntParserRuleCall_8_0()); }
		ruleEInt
		{ after(grammarAccess.getSectionAccess().getBarsEIntParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackAccess().getNameEStringParserRuleCall_1_0_0()); }
		ruleEString
		{ after(grammarAccess.getTrackAccess().getNameEStringParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__InstrumentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackAccess().getInstrumentBatteryParserRuleCall_4_0()); }
		ruleBattery
		{ after(grammarAccess.getTrackAccess().getInstrumentBatteryParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBatteryAccess().getNameEStringParserRuleCall_1_0_0()); }
		ruleEString
		{ after(grammarAccess.getBatteryAccess().getNameEStringParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Battery__NotesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBatteryAccess().getNotesBatteryNoteEnumRuleCall_2_0()); }
		ruleBatteryNote
		{ after(grammarAccess.getBatteryAccess().getNotesBatteryNoteEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
